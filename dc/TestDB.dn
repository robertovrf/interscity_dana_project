component provides App requires data_collector.DataCollectorManager dcM, interceptor.DSInterceptor {
	void exec() {
		DSInterceptor interceptor = new DSInterceptor(null, null, null)
		interceptor.set(null)
		dcM.getHistoricalDataResource(10, interceptor)
	}

	int App:main(AppParam params[]) {
		int numThreads = 40
		while(true) {
			Thread t[] = new Thread[numThreads]
			for (int i = 0; i < numThreads; i++) {
				t[i] = asynch::exec()
			}
			for (int i = 0; i < numThreads; i++) {
				t[i].join()
			}
		}
		return 0
	}
}