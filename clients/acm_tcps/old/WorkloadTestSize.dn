// This implements high entropy high volume of data -- COMPRESSION should win
component provides App requires io.Output out, net.http.HTTPRequest request,
	data.IntUtil iu, time.Calendar ic, time.DateUtil dateUtil {
	int App:main(AppParam params[]) {
		int id = iu.intFromString(params[0].string)
		while(true) {
			//char url[] = new char[]("35.188.47.150:2020/collector/resources/", iu.intToString(id), "/data")
			char url[] = new char[]("scc-mc1.lancs.ac.uk:2012/collector/resources/", iu.intToString(id), "/data")
			DateTime dt1 = null
			DateTime dt2 = null
			int result = 0
			dt1 = ic.getTime()
			HTTPResponse response = request.get(url, null)
			dt2 = ic.getTime()
			if ((dt1 != null) && (dt2 != null)) {
				result = dateUtil.toMilliseconds(dateUtil.diff(dt1, dt2))
			}
			out.println("$(iu.intToString(result))")
		}
		return 0
	}
}